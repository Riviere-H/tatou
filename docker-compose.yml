version: "3.9"

services:
  server:
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - user-files:/app/storage
      - ./server/keys:/app/keys:ro  # added in phase 2
      - ./PDF_sample/rmap_sample.pdf:/app/storage/rmap_sample.pdf:ro
      - ./logs:/app/logs
      - ./configs:/app/configs:ro
      - prometheus-multiproc:/tmp/prometheus
    environment:
      - PYTHONUNBUFFERED=1
      - GPG_PASSPHRASE=${GPG_PASSPHRASE} #new added
      # DB connection details for future use by the API
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=tatou
      - DB_USER=${MARIADB_USER}
      - DB_PASSWORD=${MARIADB_PASSWORD}
      - FLAG_2=${FLAG_2}
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus
      - APP_ENV=test #Added for testing mode
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mariadb:11.4
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-name-resolve             # Prevent DNS lookup attacks
      - --local-infile=0                # Disable local file injection
      - --max_connections=100           # Limit connections to prevent DoS
      - --sql-mode=STRICT_ALL_TABLES    # Enforce strict SQL mode
      - --skip-symbolic-links           # Prevent symbolic link attacks
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_DATABASE=tatou
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./db/tatou.sql:/docker-entrypoint-initdb.d/10-tatou.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -u root --password=$MARIADB_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:3306:3306"
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:5.2
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - UPLOAD_LIMIT=64M     # <-- use a unit and quote if using YAML key:value form
      - MEMORY_LIMIT=256M
    ports:
      - "127.0.0.1:8080:80"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus_rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    depends_on:
      - server
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - /home/lab/tatou/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - /home/lab/tatou/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  db-data:
  user-files:
  prometheus-data:
  grafana-data:
  prometheus-multiproc:
